name: CI\CD devops 2025

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  test-backend: 
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build and test with Maven
        run: mvn -f ./Tp-01/simpleapi/pom.xml clean verify

      - name: SonarCloud Scan
        working-directory: ./Tp-01/simpleapi
        run: |
          mvn -B verify sonar:sonar \
          -Dsonar.projectKey=wendyserver_DEVOPS \
          -Dsonar.organization=wendyserver \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
        

  build-and-push-docker-image:
    needs: test-backend
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./Tp-01/simpleapi
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simpleapi:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build and push database image
        uses: docker/build-push-action@v6
        with:
          context: ./Tp-01
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build and push httpd image
        uses: docker/build-push-action@v6
        with:
          context: ./Tp-01/Last_part-html
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest
          push: ${{ github.ref == 'refs/heads/main' }}


  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to remote server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest

            docker stop my_postgres || true && docker rm my_postgres || true
            docker stop my_proxy || true && docker rm my_proxy || true

            docker network create app-network || true

            docker run -d \
              --name my_postgres \
              --network app-network \
              -e POSTGRES_USER=usr \
              -e POSTGRES_PASSWORD=pwd \
              -e POSTGRES_DB=db \
              ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest

            docker run -d \
              --name my_proxy \
              --network app-network \
              -p 80:80 \
              ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest